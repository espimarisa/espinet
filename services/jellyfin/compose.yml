services:
    jellyfin:
        container_name: jellyfin
        image: lscr.io/linuxserver/jellyfin:10.10.7
        restart: unless-stopped
        devices:
            - /dev/dri/renderD128:/dev/dri/renderD128 # Video device passthrough, /dev/dri/renderD128 is usually GPU0.
        environment:
            DOCKER_MODS: "linuxserver/mods:jellyfin-opencl-intel|ghcr.io/intro-skipper/intro-skipper-docker-mod:latest" # Intel OpenCL + Intro Skipper.
            JELLYFIN_PublishedServerUrl: https://${PUBLISHED_JELLYFIN_URL} # Configures autodiscovery.
            PGID: ${PGID}
            PUID: ${PUID}
            TZ: ${TZ}
            UMASK: ${UMASK}
        networks:
            - external
            - media
        ports:
            - ${JELLYFIN_PORT:-8096}:8096 # Jellyfin web interface.
            - ${JELLYFIN_AUTODISCOVERY_PORT:-7359}:7359/udp # Local autodiscovery.
        volumes:
            - media-library:/library:ro # Root media library volume, read-only.
            - jellyfin-cache:/config/cache # Jellyfin cache volume.
            - jellyfin:/config # Jellyfin configuration and database volume.
        healthcheck:
            interval: 1m
            retries: 3
            start_period: 30s
            test: ["CMD", "curl", "-f", "http://localhost:8096/health"]
            timeout: 3s
        labels:
            caddy: ${PUBLISHED_JELLYFIN_URL} # Tells Caddy to reverse proxy to the external Jellyfin URL.
            caddy.reverse_proxy: jellyfin:8096 # Tells Caddy to reverse proxy internal traffic on port 8096.
            caddy.tls.ca: https://acme.zerossl.com/v2/DV90 # Use ZeroSSL as the CA issuer.
            caddy.tls.dns: cloudflare $CLOUDFLARE_API_TOKEN # Use Cloudflare for DNS challenges.
            caddy.tls.protocols: tls1.3 # Requires clients to support TLS 1.3.
        security_opt:
            - no-new-privileges:true

volumes:
    jellyfin:
        external: true
        name: jellyfin-volume
    jellyfin-cache:
        external: true
        name: jellyfin-cache-volume
