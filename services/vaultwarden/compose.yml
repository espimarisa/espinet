---
services:
  ###########################################################################
  # Vaultwarden: Bitwarden srv - https://github.com/dani-garcia/vaultwarden #
  ###########################################################################

  vaultwarden:
    image: ghcr.io/dani-garcia/vaultwarden:1.34.3
    container_name: vaultwarden
    hostname: vaultwarden
    restart: unless-stopped
    user: "${PUID}:${PGID}"
    read_only: true
    environment:
      ADMIN_RATELIMIT_MAX_BURST: "3" # Configures the admin ratelimit.
      ADMIN_RATELIMIT_SECONDS: "300" # Configures the admin ratelimit cooldown.
      ADMIN_TOKEN: ${VAULTWARDEN_ADMIN_TOKEN} # Sets the admin encryption token.
      DOMAIN: "https://${VAULTWARDEN_URL}" # Configures the domain to use.
      EMAIL_CHANGE_ALLOWED: "true" # Allows changing emails.
      EMERGENCY_ACCESS_ALLOWED: "true" # Allows emergency access.
      EXPERIMENTAL_CLIENT_FEATURE_FLAGS: "inline-menu-positioning-improvements,inline-menu-totp,ssh-agent,ssh-key-vault-item,export-attachments" # Flags to enable.
      IP_HEADER: "X-Forwarded-For" # Use X-Forwarded-For.
      LOGIN_RATELIMIT_MAX_BURST: "10" # Configures ratelimit bursts.
      LOGIN_RATELIMIT_SECONDS: "60" # Configures ratelimit cooldown.
      PUSH_ENABLED: "${VAULTWARDEN_PUSH_ENABLED}" # Toggles notification support.
      PUSH_INSTALLATION_ID: "${VAULTWARDEN_PUSH_INSTALLATION_ID}" # https://bitwarden.com/host/
      PUSH_INSTALLATION_KEY: "${VAULTWARDEN_PUSH_INSTALLATION_KEY}" # https://bitwarden.com/host/
      REQUIRE_DEVICE_EMAIL: "true" # Require new device emails.
      SENDS_ALLOWED: "true" # Enables Bitwarden sends.
      SIGNUPS_ALLOWED: "${VAULTWARDEN_SIGNUPS}" # Configures if signups should be enabled.
      SIGNUPS_VERIFY: "true" # Require signed up accounts to verify their email.
      SMTP_FROM: "${SMTP_SENDER}" # External email server sender.
      SMTP_HOST: "${SMTP_HOST}" # External email server host.
      SMTP_PASSWORD: "${SMTP_PASSWORD}" # External email server password.
      SMTP_PORT: "${SMTP_PORT}" # External email server port.
      SMTP_SECURITY: "${SMTP_SECURITY}" # External email server encryption method.
      SMTP_TIMEOUT: "${SMTP_TIMEOUT}" # 15s timeout.
      SMTP_USERNAME: "${SMTP_USERNAME}" # External email server username.
      WEB_VAULT_ENABLED: "true" # Enables the web vault.
      WEBSOCKET_ENABLED: "true" # Enable WS support.
    expose:
      - 80/tcp # Web interface.
    networks:
      - caddy
    tmpfs:
      - "/tmp:uid=${PUID},gid=${PGID}" # Required for read-only image.
    volumes:
      - /etc/localtime:/etc/localtime:ro # Local timezone mount.
      - vaultwarden-data:/data
    cap_drop:
      - ALL
    healthcheck:
      test: "curl -f http://127.0.0.1:80/alive || exit 1"
    security_opt:
      - no-new-privileges:true

networks:
  caddy:
    external: true
    name: caddy-network # $ docker network create caddy-network

volumes:
  vaultwarden-data:
    name: vaultwarden-bind
    driver_opts:
      device: "${APPDATA_PATH}/vaultwarden" # Root path to store Vaultwarden data.
      o: bind
      type: none
