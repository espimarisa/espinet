---
services:
    # Lidarr: Music manager, organizer, and PVR.
    lidarr:
        image: ghcr.io/11notes/lidarr:2.13.3
        container_name: lidarr
        hostname: lidarr
        read_only: true
        restart: unless-stopped
        tmpfs: /tmp:uid=1000,gid=1000
        environment:
            TZ: "${TZ}" # Configures the timezone to use.
        expose:
            - 8686/tcp # Web interface.
        networks:
            - caddy
            - gluetun
        volumes:
            - downloads:/downloads
            - lidarr:/lidarr/etc
            - media-library:/library
        cap_drop:
            - AUDIT_WRITE
            - MKNOD
            - SYS_CHROOT
        security_opt:
            - no-new-privileges:true

    # Radarr: Movie manager, organizer, and PVR.
    radarr:
        image: ghcr.io/11notes/radarr:5.27.5
        container_name: radarr
        hostname: radarr
        read_only: true
        restart: unless-stopped
        tmpfs: /tmp:uid=1000,gid=1000
        environment:
            TZ: "${TZ}" # Configures the timezone to use.
        expose:
            - 7878/tcp # Web interface.
        networks:
            - caddy
            - gluetun
        volumes:
            - ./scripts:/config/scripts
            - downloads:/downloads
            - media-library:/library
            - radarr:/radarr/etc
        cap_drop:
            - AUDIT_WRITE
            - MKNOD
            - SYS_CHROOT
        security_opt:
            - no-new-privileges:true

    # Readarr: Book manager, organizer, and PVR.
    readarr:
        image: ghcr.io/pennydreadful/bookshelf:hardcover-v0.4.20.91 # Revival of Readarr.
        container_name: readarr
        hostname: readarr
        restart: unless-stopped
        environment:
            PGID: "${PGID}" # Local group to run as.
            PUID: "${PUID}" # Local user to run as.
            TZ: "${TZ}" # Configures the timezone to use.
            UMASK: "${UMASK}" # Default umask to apply to newly created files.
        expose:
            - 8787/tcp # Web interface.
        networks:
            - caddy
            - gluetun
        volumes:
            - downloads:/downloads
            - media-library:/library
            - readarr:/config
        healthcheck:
            test: "wget --spider http://127.0.0.1:8787/ping || exit 1"
        cap_drop:
            - AUDIT_WRITE
            - MKNOD
            - SYS_CHROOT
        security_opt:
            - no-new-privileges:true

    # Sonarr: TV/Anime series, organizer, and PVR.
    sonarr:
        image: ghcr.io/11notes/sonarr:4.0.15
        container_name: sonarr
        hostname: sonarr
        restart: unless-stopped
        read_only: true
        tmpfs: /tmp:uid=1000,gid=1000
        environment:
            TZ: "${TZ}" # Configures the timezone to use.
        expose:
            - 8989/tcp # Web interface.
        networks:
            - caddy
            - gluetun
        volumes:
            - downloads:/downloads
            - media-library:/library
            - sonarr:/config
        cap_drop:
            - AUDIT_WRITE
            - MKNOD
            - SYS_CHROOT
        security_opt:
            - no-new-privileges:true

    # Profilarr: Profile synchronization for 'ARR apps.
    profilarr:
        image: santiagosayshey/profilarr:v1.1.3
        container_name: profilarr
        hostname: profilarr
        restart: unless-stopped
        environment:
            PGID: "${PGID}" # Local group to run as.
            PUID: "${PUID}" # Local user to run as.
            TZ: "${TZ}" # Configures the timezone to use.
            UMASK: "${UMASK}" # Default umask to apply to newly created files.
        expose:
            - 6868/tcp # Web interface.
        networks:
            - caddy
            - gluetun
        volumes:
            - profilarr:/config
        cap_drop:
            - AUDIT_WRITE
            - MKNOD
            - SYS_CHROOT
        security_opt:
            - no-new-privileges:true

    # Cleanuparr: Automatic cleanup and routine maintenence for 'ARR apps.
    cleanuparr:
        image: ghcr.io/cleanuparr/cleanuparr:2.3.1
        container_name: cleanuparr
        hostname: cleanuparr
        restart: unless-stopped
        environment:
            PGID: "${PGID}" # Local group to run as.
            PUID: "${PUID}" # Local user to run as.
            TZ: "${TZ}" # Configures the timezone to use.
            UMASK: "${UMASK}" # Default umask to apply to newly created files.
        expose:
            - 11011/tcp # Web interface.
        networks:
            - caddy
            - gluetun
        volumes:
            - cleanuparr:/config
        cap_drop:
            - AUDIT_WRITE
            - MKNOD
            - SYS_CHROOT
        healthcheck:
            test: "curl -f http://127.0.0.1:11011/health || exit 1"
        security_opt:
            - no-new-privileges:true

networks:
    caddy:
        external: true
        name: caddy-network # $ docker network create caddy-network
    gluetun:
        external: true
        name: gluetun-network # $ docker network create gluetun-network

volumes:
    cleanuparr:
        external: true
        name: cleanuparr-volume # $ docker volume create cleanuparr-volume
    lidarr:
        external: true
        name: lidarr-volume # $ docker volume create lidarr-volume
    profilarr:
        external: true
        name: profilarr-volume # $ docker volume create profilarr-volume
    radarr:
        external: true
        name: radarr-volume # $ docker volume create radarr-volume
    readarr:
        external: true
        name: readarr-volume # $ docker volume create readarr-volume
    sonarr:
        external: true
        name: sonarr-volume # $ docker volume create sonarr-volume
    downloads:
        name: downloads-bind
        driver_opts:
            device: "${DOWNLOADS_PATH}" # Root path to store downloaded files into.
            o: bind
            type: none
    media-library:
        name: media-library-bind
        driver_opts:
            device: "${MEDIA_LIBRARY_PATH}" # Root path to the media library.
            o: bind
            type: none
