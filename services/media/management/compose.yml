---
name: media-management

# Default Caddy options.
x-defaults-caddy: &defaults-caddy
    caddy.tls.ca: "https://acme.zerossl.com/v2/DV90" # Use ZeroSSL for certificates.
    caddy.tls.dns: "cloudflare $CLOUDFLARE_API_TOKEN" # Use Cloudflare for DNS challenges.
    caddy.tls.protocols: "tls1.3" # Require TLS 1.3.

# Default environment variables.
x-defaults-env: &defaults-env
    PGID: "${PGID}" # Local group to run as.
    PUID: "${PUID}" # Local user to run as.
    TZ: "${TZ}" # Configures the timezone to use.
    UMASK: "${UMASK}" # Default umask to apply to newly created files.

# Default healthcheck options.
x-defaults-healthcheck: &defaults-healthcheck
    interval: 1m
    retries: 3
    timeout: 3s

# Default options.
x-defaults: &defaults
    restart: unless-stopped
    environment: *defaults-env
    networks:
        - caddy
        - gluetun
    security_opt:
        - no-new-privileges:true

services:
    ###############################################################################
    # Lidarr: Music manager, organizer, and PVR.                                  #
    ###############################################################################

    lidarr:
        <<: *defaults
        image: ghcr.io/hotio/lidarr:testing # Use testing until issues get fixed.
        container_name: lidarr
        hostname: lidarr
        healthcheck:
            <<: *defaults-healthcheck
            test: "curl -f http://127.0.0.1:8686/ping || exit 1"
        labels:
            <<: *defaults-caddy
            caddy: "lidarr.${INTERNAL_DOMAIN}" # Reverse proxy to the internal domain.
            caddy.import: "internal lidarr:8686" # Reverse proxy internal traffic.
        ports:
            - ${LIDARR_PORT:-8686}:8686/tcp # Web interface.
        volumes:
            - downloads:/downloads
            - lidarr:/config
            - media-library:/library

    ###############################################################################
    # Radarr: Movie manager, organizer, and PVR.                                  #
    ###############################################################################

    radarr:
        <<: *defaults
        image: ghcr.io/hotio/radarr:release
        container_name: radarr
        hostname: radarr
        healthcheck:
            interval: 1m
            test: "curl -f http://127.0.0.1:7878/ping || exit 1"
        labels:
            <<: *defaults-healthcheck
            caddy: "radarr.${INTERNAL_DOMAIN}" # Reverse proxy to the internal domain.
            caddy.import: "internal radarr:7878" # Reverse proxy internal traffic.
        ports:
            - ${RADARR_PORT:-7878}:7878/tcp # Web interface.
        volumes:
            - ./scripts:/config/scripts
            - downloads:/downloads
            - media-library:/library
            - radarr:/config

    ###############################################################################
    # Readarr: Book manager, organizer, and PVR.                                  #
    ###############################################################################

    readarr:
        <<: *defaults
        image: ghcr.io/faustvii/readarr:0.9.0
        container_name: readarr
        hostname: readarr
        healthcheck:
            interval: 1m
            test: "curl -f http://127.0.0.1:7878/ping || exit 1"
        labels:
            <<: *defaults-healthcheck
            caddy: "readarr.${INTERNAL_DOMAIN}" # Reverse proxy to the internal domain.
            caddy.import: "internal readarr:8787" # Reverse proxy internal traffic.
        ports:
            - ${READARR_PORT:-8787}:8787/tcp # Web interface.
        volumes:
            - downloads:/downloads
            - media-library:/library
            - readarr:/config

    ###############################################################################
    # Sonarr: TV/Anime series, organizer, and PVR.                                #
    ###############################################################################

    sonarr:
        <<: *defaults
        image: ghcr.io/hotio/sonarr:release
        container_name: sonarr
        hostname: sonarr
        healthcheck:
            <<: *defaults-healthcheck
            test: "curl -f http://127.0.0.1:8989/ping || exit 1"
        labels:
            <<: *defaults-caddy
            caddy: "sonarr.${INTERNAL_DOMAIN}" # Reverse proxy to the internal domain.
            caddy.import: "internal sonarr:8989" # Reverse proxy internal traffic.
        ports:
            - ${SONARR_PORT:-8989}:8989/tcp # Web interface.
        volumes:
            - downloads:/downloads
            - media-library:/library
            - sonarr:/config

    ###############################################################################
    # Profilarr: Profile management and synchronization for Radarr and Sonarr.    #
    ###############################################################################

    profilarr:
        <<: *defaults
        image: santiagosayshey/profilarr:latest
        container_name: profilarr
        hostname: profilarr
        labels:
            <<: *defaults-caddy
            caddy: "profilarr.${INTERNAL_DOMAIN}" # Reverse proxy to the internal domain.
            caddy.import: "internal profilarr:6868" # Reverse proxy internal traffic.
        ports:
            - ${PROFILARR_PORT:-6868}:6868/tcp # Web interface.
        volumes:
            - profilarr:/config

    ###############################################################################
    # Cleanuparr: Automatic cleanup and routine maintenence for 'ARR apps.        #
    ###############################################################################

    cleanuparr:
        <<: *defaults
        image: ghcr.io/cleanuparr/cleanuparr:2
        container_name: cleanuparr
        hostname: cleanuparr
        labels:
            <<: *defaults-caddy
            caddy: "cleanuparr.${INTERNAL_DOMAIN}" # Reverse proxy to the internal domain.
            caddy.import: "internal cleanuparr:6868" # Reverse proxy internal traffic.
        ports:
            - ${PROFILARR_PORT:-11011}:11011/tcp # Web interface.
        volumes:
            - cleanuparr:/config

networks:
    caddy:
        external: true
        name: caddy-network # $ docker network create caddy-network
    gluetun:
        external: true
        name: gluetun-network # $ docker network create gluetun-network

volumes:
    cleanuparr:
        external: true
        name: cleanuparr-volume # $ docker volume create cleanuparr-volume
    lidarr:
        external: true
        name: lidarr-volume # $ docker volume create lidarr-volume
    profilarr:
        external: true
        name: sonarr-volume # $ docker volume create profilarr-volume
    radarr:
        external: true
        name: radarr-volume # $ docker volume create radarr-volume
    readarr:
        external: true
        name: readarr-volume # $ docker volume create readarr-volume
    sonarr:
        external: true
        name: sonarr-volume # $ docker volume create sonarr-volume
    downloads:
        name: downloads-volume
        driver_opts:
            device: "${DOWNLOADS_PATH}" # Root path to store downloaded files into.
            o: bind
            type: none
    media-library:
        name: media-library-volume
        driver_opts:
            device: "${MEDIA_LIBRARY_PATH}" # Root path to the media library.
            o: bind
            type: none
