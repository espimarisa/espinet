---
services:
    ###############################################################################
    # qBittorrent: BitTorrent client.                                             #
    ##############################################################################

    qbittorrent:
        image: lscr.io/linuxserver/qbittorrent:latest
        container_name: qbittorrent
        network_mode: service:gluetun # Route all traffic through Gluetun.
        restart: unless-stopped
        depends_on:
            gluetun:
                condition: service_healthy
                restart: true
        environment:
            DOCKER_MODS: "ghcr.io/gabe565/linuxserver-mod-vuetorrent" # Auto-install Vuetorrent to /vuetorrent.
            PGID: "${PGID}" # Local group to run as.
            PUID: "${PUID}" # Local user to run as.
            TZ: "${TZ}" # Configures the timezone to use.
            UMASK: "${UMASK}" # Umask to apply to newly created files.
            WEBUI_PORT: "${QBITTORRENT_PORT:-8080}" # Sets the web interface port.
        labels:
            caddy: "qbittorrent.${INTERNAL_DOMAIN}" # Reverse proxy to the internal domain.
            caddy.import: "internal gluetun:8080" # Reverse proxy internal traffic.
            caddy.tls.ca: "https://acme.zerossl.com/v2/DV90" # Use ZeroSSL for certificates.
            caddy.tls.dns: "cloudflare $CLOUDFLARE_API_TOKEN" # Use Cloudflare for DNS challenges.
            caddy.tls.protocols: "tls1.3" # Require TLS 1.3.
        healthcheck:
            interval: 1m
            start_period: 30s
            test: "ifconfig | grep -q eth0"
        security_opt:
            - no-new-privileges:true
        volumes:
            - downloads:/downloads
            - qbittorrent:/config

    ###############################################################################
    # qBittorrent Port Manager: Sync qBittorrent port with Gluetun.               #
    ##############################################################################

    qbittorrent-port-manager:
        image: jopiermeier/gluetun-qbittorrent-port-manager:latest
        container_name: qbittorrent
        network_mode: service:gluetun # Route all traffic through Gluetun.
        read_only: true
        restart: unless-stopped
        cap_drop:
            - ALL
        depends_on:
            gluetun:
                condition: service_healthy
                restart: true
            qbittorrent:
                condition: service_started
                restart: true
        environment:
            QBITTORRENT_USER: "${QBITTORRENT_USER}" # Configured qBittorrent web interface username.
            QBITTORRENT_PASS: "${QBITTORRENT_PASS}" # Configured qBittorrent web interface password.
        security_opt:
            - no-new-privileges:true
        volumes:
            - gluetun:/tmp/gluetun

networks:
    gluetun:
        driver: bridge
        enable_ipv6: false
        external: true
        name: gluetun-network # $ docker network create --ipv6=false gluetun-network

volumes:
    gluetun:
        external: true
        name: gluetun-volume # $ docker volume create gluetun-volume
    qbittorrent:
        external: true
        name: qbittorrent-volume # $ docker volume create qbittorrent-volume
    downloads:
        name: downloads-volume
        driver_opts:
            device: "${DOWNLOADS_PATH}" # Root path to store downloaded files into.
            o: bind
            type: none
