---
name: monitoring

# Default Caddy options.
x-defaults-caddy: &defaults-caddy
    caddy.tls.ca: "https://acme.zerossl.com/v2/DV90" # Use ZeroSSL for certificates.
    caddy.tls.dns: "cloudflare $CLOUDFLARE_API_TOKEN" # Use Cloudflare for DNS challenges.
    caddy.tls.protocols: "tls1.3" # Require TLS 1.3.

# Default environment variables.
x-defaults-env: &defaults-env
    PGID: "${PGID}" # Local group to run as.
    PUID: "${PUID}" # Local user to run as.
    TZ: "${TZ}" # Configures the timezone to use.
    UMASK: "${UMASK}" # Default umask to apply to newly created files.

# Default healthcheck options.
x-defaults-healthcheck: &defaults-healthcheck
    interval: 1m
    retries: 3
    timeout: 3s

# Default options.
x-defaults: &defaults
    restart: unless-stopped
    environment: *defaults-env
    security_opt:
        - no-new-privileges:true

services:
    ###############################################################################
    # Dozzle: Docker log viewer.                                                  #
    ###############################################################################

    dozzle:
        image: ghcr.io/amir20/dozzle:v8.13.14
        container_name: dozzle
        hostname: dozzle
        depends_on:
            socket-proxy:
                condition: service_healthy
                restart: true
        environment:
            <<: *defaults-env
            DOCKER_HOST: "tcp://socket-proxy:2375" # Connect to the socket proxy.
            DOZZLE_ENABLE_ACTIONS: "true" # Enables container actions.
        labels:
            <<: *defaults-caddy
            caddy: "dozzle.${INTERNAL_DOMAIN}" # Reverse proxy to the internal domain.
            caddy.import: "internal dozzle:8080" # Reverse proxy internal traffic.
        healthcheck:
            <<: *defaults-healthcheck
            test: ["CMD", "/dozzle", "healthcheck"]
        networks:
            - caddy
            - socket-proxy
        ports:
            - ${DOZZLE_PORT:-8082}:8080/tcp # Web interface.
        volumes:
            - dozzle:/data

    ###########################################################################
    # Uptime Kuma: Uptime monitoring, notifications, and status page.         #
    ###########################################################################

    uptime-kuma:
        <<: *defaults
        image: ghcr.io/louislam/uptime-kuma:2.0.0-beta-rootless.4
        container_name: uptime-kuma
        user: ${PUID}:${PGID}
        hostname: uptime-kuma
        depends_on:
            socket-proxy:
                condition: service_healthy
                restart: true
        environment:
            <<: *defaults-env
            DOCKER_HOST: "tcp://socket-proxy:2375" # Connect to the socket proxy.
            UPTIME_KUMA_PORT: "${UPTIME_KUMA_PORT:-3001}" # Configures the port to use.
        labels:
            <<: *defaults-caddy
            caddy: "${UPTIME_KUMA_URL}" # Reverse proxy traffic to the published URL.
            caddy.import: "external uptime-kuma:${UPTIME_KUMA_PORT:-3001}" # Reverse proxy internal traffic.
        networks:
            - caddy
            - socket-proxy
        ports:
            - ${UPTIME_KUMA_PORT:-3001}:${UPTIME_KUMA_PORT:-3001}/tcp # Web interface.
        volumes:
            - uptime-kuma:/app/data

networks:
    caddy:
        external: true
        name: caddy-network # $ docker network create caddy-network
    socket-proxy:
        external: true # $ docker network create --internal=true socket-proxy-network
        internal: true # Isolates the network from the outside.
        name: socket-proxy-network # Internal-only network used only for Socket Proxy traffic.

volumes:
    dozzle:
        external: true
        name: dozzle-volume # $ docker volume create dozzle-volume
    uptime-kuma:
        external: true
        name: uptime-kuma-volume # Uptime Kuma configuration and database.
