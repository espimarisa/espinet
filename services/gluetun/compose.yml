---
services:
    ###############################################################################
    # Gluetun: VPN client. I currently have mine configured for ProtonVPN.        #
    ##############################################################################

    gluetun:
        image: ghcr.io/qdm12/gluetun:v3.39.1 # Held back due to odd issues.
        container_name: gluetun
        hostname: gluetun
        restart: unless-stopped
        cap_add:
            - NET_ADMIN # Required for Wireguard configuration.
        devices:
            - /dev/net/tun:/dev/net/tun # TUN/TAP device passthrough.
        environment:
            BLOCK_MALICIOUS: "off" # https://github.com/qdm12/gluetun/issues/765
            DOT: "off" # Disables DOT due to weird issues.
            FIREWALL_OUTBOUND_SUBNETS: "${FIREWALL_OUTBOUND_SUBNETS}" # List of local subnets allowed to access the gluetun network.
            HEALTH_VPN_DURATION_INITIAL: "60s" # https://github.com/qdm12/gluetun-wiki/blob/main/setup/options/healthcheck.md
            PGID: "${PGID}" # Local group to run as.
            PORT_FORWARD_ONLY: "${PORT_FORWARD_ONLY}" # If on, only connect to P2P servers.
            PUID: "${PUID}" # Local user to run as.
            SERVER_CITIES: "${SERVER_CITIES}" # VPN server cities to connect to.
            SERVER_COUNTRIES: "${SERVER_COUNTRIES}" # VPN server countries to connect to.
            SERVER_REGIONS: "${SERVER_REGIONS}" # VPN server regions to connect to.
            TZ: "${TZ}" # Configures the timezone to use.
            UPDATER_PERIOD: "24h" # Update server data every 24 hours.
            VPN_PORT_FORWARDING_STATUS_FILE: "/gluetun/forwarded_port" # Write the forwarded port file.
            VPN_PORT_FORWARDING_UP_COMMAND: /bin/sh -c 'wget -O- --retry-connrefused --post-data "json={\"listen_port\":{{PORTS}}}" http://127.0.0.1:8080/api/v2/app/setPreferences 2>&1' # Attempt to update qBittorrent port; local auth bypass needs to be on. Edit port above if need be.
            VPN_PORT_FORWARDING: "${VPN_PORT_FORWARDING}" # If on, enables P2P port forwarding.
            VPN_SERVICE_PROVIDER: "${VPN_SERVICE_PROVIDER}" # https://github.com/qdm12/gluetun-wiki/tree/main/setup/providers
            VPN_TYPE: "wireguard" # Use Wireguard for VPN connections.
            WIREGUARD_ADDRESSES: "${WIREGUARD_ADDRESSES}" # Addresses to use for Wireguard.
            WIREGUARD_ENDPOINT_PORT: "${WIREGUARD_ENDPOINT_PORT}" # Port to use for Wireguard.
            WIREGUARD_MTU: "1380" # Use a lower MTU for stability/performance.
            WIREGUARD_PERSISTENT_KEEPALIVE_INTERVAL: "25s" # Keep Wireguard alive a little longer.
            WIREGUARD_PRESHARED_KEY: "${WIREGUARD_PRESHARED_KEY}" # Preshared key from the VPN provider's configuration file.
            WIREGUARD_PRIVATE_KEY: "${WIREGUARD_PRIVATE_KEY}" # PrivateKey from the VPN provider's configuration file.
            WIREGUARD_PUBLIC_KEY: "${WIREGUARD_PUBLIC_KEY}" # PublicKey from the VPN provider's configuration file.
        networks:
            - gluetun
        ports:
            - ${FLARESOLVERR_PORT:-8191}:8191/tcp # Flaresolverr server.
            - ${PROWLARR_PORT:-9696}:9696/tcp # Prowlarr web interface.
            - ${QBITTORRENT_PORT:-8080}:${QBITTORRENT_PORT:-8080}/tcp # qBittorrent web interface.
        security_opt:
            - no-new-privileges:true
        volumes:
            - gluetun:/gluetun

networks:
    gluetun:
        driver: bridge
        enable_ipv6: false
        external: true
        name: gluetun-network # $ docker network create --ipv6=false gluetun-network

volumes:
    gluetun:
        external: true
        name: gluetun-volume # $ docker volume create gluetun-volume
