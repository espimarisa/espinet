services:
    gluetun:
        container_name: "gluetun"
        image: "ghcr.io/qdm12/gluetun:v3"
        cap_add: ["NET_ADMIN"] # Required for managing network interfaces.
        restart: "unless-stopped"
        security_opt: ["no-new-privileges:true"] # Prevents privilege escalation.
        devices:
            - "/dev/net/tun:/dev/net/tun" # TUN/TAP device passthrough.
        environment:
            BLOCK_MALICIOUS: "off" # Disable unbound, cuts RAM usage significantly.
            FIREWALL_OUTBOUND_SUBNETS: "${FIREWALL_OUTBOUND_SUBNETS}" # List of subnets allowed to bypass firewall traffic.
            HEALTH_VPN_DURATION_INITIAL: "120s" # Configures the initial VPN health timer.
            PORT_FORWARD_ONLY: true # Only connect to servers with port forwarding enabled.
            SERVER_COUNTRIES: "${SERVER_COUNTRIES}"
            UPDATER_PERIOD: "24h" # Check for updated server information every 24 hours.
            VPN_PORT_FORWARDING_UP_COMMAND: /bin/sh -c 'wget -O- --retry-connrefused --post-data "json={\"listen_port\":{{PORTS}}}" http://127.0.0.1:8080/api/v2/app/setPreferences 2>&1' # Attempt to update qBittorrent port; local auth bypass needs to be on. Edit port above if need be.
            VPN_PORT_FORWARDING: "on" # Enables port forwarding.
            VPN_SERVICE_PROVIDER: "${VPN_SERVICE_PROVIDER}" # Configures the VPN service provider.
            VPN_TYPE: "wireguard" # Use Wireguard for connections.
            WIREGUARD_PRIVATE_KEY: "${WIREGUARD_PRIVATE_KEY}" # Configures Wireguard to use the provided private key.
        networks:
            - "gluetun" # Gluetun VPN network.
        ports:
            - "${QBITTORRENT_PORT:-8080}:${QBITTORRENT_PORT:-8080}" # qBittorrent web interface.
        volumes:
            - "gluetun:/gluetun" # Configuration and data volume.

volumes:
    gluetun:
        name: "gluetun-volume"
        external: true
