services:
  jellyfin:
    container_name: jellyfin
    image: lscr.io/linuxserver/jellyfin:latest
    env_file: ../../.env
    networks: [caddy]
    restart: unless-stopped
    security_opt: [no-new-privileges:true]
    devices:
      - /dev/dri:/dev/dri
    environment:
      - DOCKER_MODS=linuxserver/mods:jellyfin-opencl-intel|ghcr.io/intro-skipper/intro-skipper-docker-mod:latest # OpenCL support; intro skipper button.
      - PUID=${PUID}
      - TZ=${TZ}
      - UMASK=${UMASK}
    healthcheck:
      interval: 5m
      retries: 3
      start_period: 1m
      test: ["CMD", "curl", "-f", "http://localhost:8096/health"]
      timeout: 10s
    labels:
      caddy: ${PUBLISHED_JELLYFIN_URL} # Tells Caddy to reverse-proxy to the external Jellyfin URL.
      caddy.reverse_proxy: jellyfin:8096 # Tells Caddy to reverse-proxy Jellyfin traffic.
      caddy.tls.ca: https://acme.zerossl.com/v2/DV90 # Use ZeroSSL for certificates instead of LE.
      caddy.tls.dns: "cloudflare $CLOUDFLARE_API_TOKEN" # Use Cloudflare as the DNS resolver for ACME challenges.
      caddy.tls.protocols: tls1.3 # Enforce TLS 1.3.
    logging:
      driver: json-file
      options:
        max-file: 5
        max-size: 10m
    volumes:
      - ${MEDIA_LIBRARY_DIRECTORY}:/library
      - jellyfin:/config
