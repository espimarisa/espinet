services:
  jellyfin:
    container_name: jellyfin
    image: jellyfin/jellyfin:latest
    user: ${PUID}:${PGID}
    devices:
      - /dev/dri:/dev/dri # /dev/dri mapping for hardware acceleration.
    env_file:
      - ../../.env
    environment:
      - JELLYFIN_PublishedServerUrl=https://${URL_PUBLISHED_JELLYFIN} # Override PublishedServerUrl to public URL.
      - TZ=${TZ}
      - UMASK=022
    healthcheck:
      interval: 30s
      retries: 3
      start_period: 60s
      test: ["CMD", "curl", "-f", "http://localhost:8096/health"]
      timeout: 10s
    labels:
      caddy: ${URL_PUBLISHED_JELLYFIN} # Tell Caddy to reverse proxy to URL_PUBLISHED_JELLYFIN.
      caddy.reverse_proxy: jellyfin:8096 # Tell Caddy to reverse proxy Jellyfin traffic.
    logging:
      driver: json-file
      options:
        max-file: 5
        max-size: 10m
    networks:
      - external # Created by root/compose.yml.
    ports:
      - 1900:1900/udp # DLNA discovery
      - 7359:7359/udp # Local client discovery.
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${PATH_MEDIA_LIBRARY}:/media # Jellyfin media library location.
      - jellyfin-dpkeys:/root/.aspnet/DataProtection-Keys # DPKEYS persistence
      - jellyfin:/config # Jellyfin config storage location; volume created by root/compose.yml.
