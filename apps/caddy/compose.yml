services:
  caddy:
    container_name: caddy
    image: ghcr.io/homeall/caddy-reverse-proxy-cloudflare:2025.08.10
    env_file: ../../.env
    hostname: caddy
    restart: unless-stopped
    environment:
      - CADDY_INGRESS_NETWORKS=caddy # Only proxy traffic from the caddy network.
      - CLOUDFLARE_API_TOKEN=${CLOUDFLARE_API_TOKEN} # A scoped Cloudflare account token with DNS Zone edit permissions.
      - TZ=${TZ}
    networks:
      - caddy # External Caddy/reverse proxy network.
      - frontend # Internal network for local web interface access.
    ports:
      - 80:80 # HTTP
      - 443:443 # HTTPS
      - 443:443/udp # HTTPS3
    volumes:
      - socket-proxy:/var/run # Docker socket proxy.
      - caddy:/data # Caddy certificate and configuration data.
    depends_on:
      socket-proxy:
        condition: service_healthy # Wait for the Docker socket proxy.
    healthcheck:
      interval: 5m
      retries: 3
      start_period: 1m
      test: ["CMD", "wget", "--spider", "http://localhost:2019/config/"]
      timeout: 10s
    labels:
      caddy.acme_dns: cloudflare ${CLOUDFLARE_API_TOKEN} # Use Cloudflare for TLS DNS challenges instead of LE.
      caddy.email: ${ACME_EMAIL} # Email to use for public ACME challenges.
    security_opt:
      - no-new-privileges:true

networks:
  caddy:
    name: caddy-network
    driver: bridge
    enable_ipv6: false
    external: true
  frontend:
    name: frontend-network
    driver: bridge
    enable_ipv6: false
    external: true

volumes:
  caddy:
    name: caddy-volume
    external: true
  socket-proxy:
    name: socket-proxy-volume
    external: true
